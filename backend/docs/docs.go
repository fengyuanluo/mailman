// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/account-emails/extract/{id}": {
            "post": {
                "description": "Extract specific content from emails using regex, JavaScript, or Go templates with comprehensive search and filtering capabilities. Supports both account-specific and global extraction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-emails",
                    "emails"
                ],
                "summary": "Extract content from emails with advanced filtering and processing",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID (only for /account-emails/extract/{id} endpoint)",
                        "name": "id",
                        "in": "path"
                    },
                    {
                        "description": "Extraction request with search criteria and extractors",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ExtractEmailsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extraction results with matches and statistics",
                        "schema": {
                            "$ref": "#/definitions/api.ExtractEmailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/account-emails/fetch/{id}": {
            "post": {
                "description": "Fetch and store emails for an account with support for incremental sync, custom mailboxes, and date ranges. Supports both full sync and incremental sync modes. For incremental sync, maintains sync records to track last sync times per mailbox.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-emails"
                ],
                "summary": "Fetch and store emails for an account with incremental/full sync support",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Sync options (optional - defaults to incremental sync of INBOX)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.FetchAndStoreRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful sync operation with detailed results",
                        "schema": {
                            "$ref": "#/definitions/api.FetchAndStoreResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid account ID or request parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/account-emails/list/{id}": {
            "get": {
                "description": "Get emails for an account with support for date range, text search, and keyword filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-emails"
                ],
                "summary": "Get emails for an account with advanced search",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit (default: 50, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination (default: 0)",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order: date_desc, date_asc, subject_asc, subject_desc (default: date_desc)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date for filtering (RFC3339 format)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date for filtering (RFC3339 format)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in From field (fuzzy match)",
                        "name": "from_query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in To field (fuzzy match)",
                        "name": "to_query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in CC field (fuzzy match)",
                        "name": "cc_query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in Subject field (fuzzy match)",
                        "name": "subject_query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in email body (fuzzy match)",
                        "name": "body_query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search in HTML body (fuzzy match)",
                        "name": "html_query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Global keyword search across all text fields",
                        "name": "keyword",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by mailbox name",
                        "name": "mailbox",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response with emails array and pagination info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/accounts": {
            "get": {
                "description": "Get all email accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get all email accounts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.EmailAccount"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new email account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Create a new email account",
                "parameters": [
                    {
                        "description": "Email Account",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.EmailAccount"
                        }
                    }
                }
            }
        },
        "/api/accounts/paginated": {
            "get": {
                "description": "Get email accounts with pagination support",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get email accounts with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field (default: created_at)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order: asc or desc (default: desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term for email address (default: ”)",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PaginatedAccountsResponse"
                        }
                    }
                }
            }
        },
        "/api/accounts/verify": {
            "post": {
                "description": "Verify if an email account can connect successfully using IMAP or OAuth2",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Verify account connectivity",
                "parameters": [
                    {
                        "description": "Account verification request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.VerifyAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.VerifyAccountResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/accounts/{id}": {
            "get": {
                "description": "Get an email account by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get an email account by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EmailAccount"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an email account (supports partial updates)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Update an email account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Email Account Update",
                        "name": "account",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateAccountRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EmailAccount"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an email account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Delete an email account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/accounts/{id}/last-sync-record": {
            "get": {
                "description": "Get the most recent sync record for a specific account across all mailboxes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get the last sync record for an account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Last sync record",
                        "schema": {
                            "$ref": "#/definitions/models.IncrementalSyncRecord"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid account ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account not found or no sync records",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/accounts/{id}/sync-records": {
            "get": {
                "description": "Get all incremental sync records for a specific account, showing last sync times per mailbox",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Get incremental sync records for an account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of incremental sync records",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.IncrementalSyncRecord"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid account ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an incremental sync record for a specific account and mailbox (forces full sync on next fetch)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "accounts"
                ],
                "summary": "Delete an incremental sync record",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Account ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Mailbox name",
                        "name": "mailbox",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content - Record deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request - Invalid account ID or missing mailbox parameter",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account or sync record not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/activities/cleanup": {
            "delete": {
                "description": "删除指定天数之前的活动记录（需要管理员权限）",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activities"
                ],
                "summary": "删除旧的活动记录",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "保留天数",
                        "name": "days",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/activities/recent": {
            "get": {
                "description": "获取当前用户或所有用户的最近活动记录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activities"
                ],
                "summary": "获取最近的活动记录",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "返回记录数量限制",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "是否获取所有用户的活动（需要管理员权限）",
                        "name": "all",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ActivityLogResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/activities/stats": {
            "get": {
                "description": "获取指定时间范围内的活动统计信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activities"
                ],
                "summary": "获取活动统计信息",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 7,
                        "description": "统计天数",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/activities/type/{type}": {
            "get": {
                "description": "获取指定类型的活动记录",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activities"
                ],
                "summary": "根据类型获取活动记录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "活动类型",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "返回记录数量限制",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ActivityLogResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "description": "Authenticate user and create session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Invalidate user session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get information about the currently authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/cache/stats": {
            "get": {
                "description": "Get email cache statistics and performance metrics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cache"
                ],
                "summary": "Get cache statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CacheStatsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/email-domains": {
            "get": {
                "description": "Get all unique email domains from registered email accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "emails"
                ],
                "summary": "Get all email domains",
                "responses": {
                    "200": {
                        "description": "List of email domains",
                        "schema": {
                            "$ref": "#/definitions/api.EmailDomainsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/emails/extract": {
            "post": {
                "description": "Extract specific content from emails using regex, JavaScript, or Go templates with comprehensive search and filtering capabilities. Supports both account-specific and global extraction.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "account-emails",
                    "emails"
                ],
                "summary": "Extract content from emails with advanced filtering and processing",
                "parameters": [
                    {
                        "description": "Extraction request with search criteria and extractors",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.ExtractEmailsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Extraction results with matches and statistics",
                        "schema": {
                            "$ref": "#/definitions/api.ExtractEmailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/emails/fetch-now": {
            "post": {
                "description": "Trigger immediate email fetch for subscriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "emails"
                ],
                "summary": "Fetch emails immediately",
                "parameters": [
                    {
                        "description": "Fetch configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FetchNowRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.FetchNowResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/emails/{id}": {
            "get": {
                "description": "Get an email by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "emails"
                ],
                "summary": "Get an email by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Email ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Email"
                        }
                    }
                }
            }
        },
        "/api/extractor-templates": {
            "get": {
                "description": "Get all extractor templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extractor-templates"
                ],
                "summary": "Get all extractor templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ExtractorTemplateResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve extractor templates",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new extractor template for reusable email extraction patterns",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extractor-templates"
                ],
                "summary": "Create a new extractor template",
                "parameters": [
                    {
                        "description": "Create extractor template request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateExtractorTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.ExtractorTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to create extractor template",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/extractor-templates/paginated": {
            "get": {
                "description": "Get extractor templates with pagination support and name search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extractor-templates"
                ],
                "summary": "Get extractor templates with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field (default: created_at)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order: asc or desc (default: desc)",
                        "name": "sort_order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term for template name",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.PaginatedExtractorTemplatesResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve extractor templates",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/extractor-templates/{id}": {
            "get": {
                "description": "Get an extractor template by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extractor-templates"
                ],
                "summary": "Get an extractor template by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Extractor Template ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ExtractorTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid template ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Extractor template not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing extractor template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extractor-templates"
                ],
                "summary": "Update an extractor template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Extractor Template ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update extractor template request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.UpdateExtractorTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ExtractorTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Extractor template not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to update extractor template",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an extractor template by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extractor-templates"
                ],
                "summary": "Delete an extractor template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Extractor Template ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid template ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to delete extractor template",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/extractor-templates/{id}/test": {
            "post": {
                "description": "Test an extractor template with a specific email or custom email content",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "extractor-templates"
                ],
                "summary": "Test extractor template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Template ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Test request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TestExtractorTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Test results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TestExtractorResult"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/fetch-emails": {
            "post": {
                "description": "Fetch emails for a given account with advanced filtering capabilities and intelligent email address matching. Supports Gmail aliases (dots, plus signs, googlemail.com), domain mail forwarding, content filtering, flag-based filtering, size filtering, date ranges, and more. When using email_address parameter, the system will automatically handle Gmail aliases and domain mail scenarios.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "emails"
                ],
                "summary": "Fetch emails with enhanced filtering and smart email matching",
                "parameters": [
                    {
                        "description": "Enhanced email fetch request with multiple filtering options. Supports Gmail aliases (john.doe+work@gmail.com matches johndoe@gmail.com) and domain mail (any@company.com matches domain mail account for company.com)",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.FetchEmailsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with emails and metadata",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters or missing required fields",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account not found (after trying direct match, Gmail alias normalization, and domain matching)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/health": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/openai/call": {
            "post": {
                "description": "Call OpenAI API with custom system prompt and user message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Call OpenAI API directly",
                "parameters": [
                    {
                        "description": "OpenAI call request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CallOpenAIRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.CallOpenAIResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Configuration not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/openai/configs": {
            "get": {
                "description": "Get a list of all OpenAI configurations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "List all OpenAI configurations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.OpenAIConfigResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new OpenAI configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Create a new OpenAI configuration",
                "parameters": [
                    {
                        "description": "OpenAI configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.OpenAIConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.OpenAIConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/openai/configs/{id}": {
            "get": {
                "description": "Get a specific OpenAI configuration by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Get OpenAI configuration by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Configuration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.OpenAIConfigResponse"
                        }
                    },
                    "404": {
                        "description": "Configuration not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing OpenAI configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Update an OpenAI configuration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Configuration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "OpenAI configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.OpenAIConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.OpenAIConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Configuration not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an OpenAI configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Delete an OpenAI configuration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Configuration ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Configuration not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/openai/generate-template": {
            "post": {
                "description": "Generate an email extraction template using OpenAI based on user input",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Generate an email template using AI",
                "parameters": [
                    {
                        "description": "Generation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.GenerateEmailTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.GenerateEmailTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/openai/initialize-templates": {
            "post": {
                "description": "Initialize default AI prompt templates in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Initialize default prompt templates",
                "responses": {
                    "200": {
                        "description": "Default templates initialized successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/openai/prompt-templates": {
            "get": {
                "description": "Get a list of all AI prompt templates",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "List all AI prompt templates",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.AIPromptTemplateResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new AI prompt template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Create a new AI prompt template",
                "parameters": [
                    {
                        "description": "AI prompt template",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AIPromptTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.AIPromptTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/openai/prompt-templates/{id}": {
            "get": {
                "description": "Get a specific AI prompt template by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Get AI prompt template by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Template ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AIPromptTemplateResponse"
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing AI prompt template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Update an AI prompt template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Template ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "AI prompt template",
                        "name": "template",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.AIPromptTemplateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.AIPromptTemplateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Template not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an AI prompt template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Delete an AI prompt template",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Template ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Template not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/openai/test-config": {
            "post": {
                "description": "Test an OpenAI configuration by making a simple API call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "openai"
                ],
                "summary": "Test an OpenAI configuration",
                "parameters": [
                    {
                        "description": "OpenAI configuration to test",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.OpenAIConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TestOpenAIConfigResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/providers": {
            "get": {
                "description": "Get all mail providers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "providers"
                ],
                "summary": "Get all mail providers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MailProvider"
                            }
                        }
                    }
                }
            }
        },
        "/api/random-email": {
            "get": {
                "description": "Get a random email account from existing accounts. Supports generating random Gmail aliases and selecting domain email accounts based on parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "emails"
                ],
                "summary": "Get a random email account",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Allow random alias emails (Gmail aliases)",
                        "name": "alias",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Allow domain emails",
                        "name": "domain",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with random email account",
                        "schema": {
                            "$ref": "#/definitions/api.RandomEmailResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found - No email accounts available",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/subscriptions": {
            "get": {
                "description": "Get all active email subscriptions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "List email subscriptions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by account ID",
                        "name": "account_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.SubscriptionListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new email subscription for real-time monitoring",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Create email subscription",
                "parameters": [
                    {
                        "description": "Subscription configuration",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CreateSubscriptionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.SubscriptionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/subscriptions/{id}": {
            "delete": {
                "description": "Cancel an active email subscription",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "subscriptions"
                ],
                "summary": "Cancel email subscription",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Subscription ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/wait-email": {
            "post": {
                "description": "Wait for new emails to arrive for a specific account or email address. Supports timeout, interval checking, and content extraction using the same extractors as the extract-emails endpoint. Only one of accountId or email parameters must be provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "emails"
                ],
                "summary": "Wait for emails to arrive with filtering and extraction",
                "parameters": [
                    {
                        "description": "Request body with account identification and optional extractors",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.WaitEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email found or timeout reached",
                        "schema": {
                            "$ref": "#/definitions/api.WaitEmailResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid parameters",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found - Account not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AIPromptTemplateRequest": {
            "type": "object",
            "required": [
                "name",
                "scenario",
                "system_prompt"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "max_tokens": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scenario": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                },
                "user_prompt": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "api.AIPromptTemplateResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "max_tokens": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "scenario": {
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_prompt": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "api.AccountCacheStats": {
            "description": "Cache statistics for a single email account",
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID",
                    "type": "integer",
                    "example": 1
                },
                "cache_size": {
                    "description": "Cache size in bytes",
                    "type": "integer",
                    "example": 2621440
                },
                "email_address": {
                    "description": "Email address",
                    "type": "string",
                    "example": "user@example.com"
                },
                "email_count": {
                    "description": "Number of cached emails",
                    "type": "integer",
                    "example": 250
                },
                "newest_email": {
                    "description": "Newest cached email date",
                    "type": "string"
                },
                "oldest_email": {
                    "description": "Oldest cached email date",
                    "type": "string"
                }
            }
        },
        "api.CacheStatsResponse": {
            "description": "Email cache statistics",
            "type": "object",
            "properties": {
                "account_stats": {
                    "description": "Cache size by account",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.AccountCacheStats"
                    }
                },
                "hit_rate": {
                    "description": "Cache hit rate",
                    "type": "number",
                    "example": 0.85
                },
                "last_cleanup": {
                    "description": "Last cleanup time",
                    "type": "string"
                },
                "total_emails": {
                    "description": "Total number of cached emails",
                    "type": "integer",
                    "example": 1500
                },
                "total_size": {
                    "description": "Total cache size in bytes",
                    "type": "integer",
                    "example": 15728640
                }
            }
        },
        "api.CallOpenAIRequest": {
            "type": "object",
            "required": [
                "config_id",
                "user_message"
            ],
            "properties": {
                "config_id": {
                    "type": "integer"
                },
                "max_tokens": {
                    "type": "integer"
                },
                "response_format": {
                    "description": "\"text\" or \"json\"",
                    "type": "string"
                },
                "system_prompt": {
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                },
                "template_id": {
                    "type": "integer"
                },
                "user_message": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "api.CallOpenAIResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "response_type": {
                    "description": "\"text\" or \"json\"",
                    "type": "string"
                },
                "temperature": {
                    "type": "number"
                },
                "tokens_used": {
                    "type": "integer"
                }
            }
        },
        "api.CreateAccountRequest": {
            "description": "Request body for creating an email account",
            "type": "object",
            "required": [
                "authType",
                "emailAddress",
                "mailProviderId"
            ],
            "properties": {
                "authType": {
                    "$ref": "#/definitions/models.AuthType"
                },
                "customSettings": {
                    "$ref": "#/definitions/models.JSONMap"
                },
                "domain": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "isDomainMail": {
                    "type": "boolean"
                },
                "mailProviderId": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "api.CreateExtractorTemplateRequest": {
            "description": "Request body for creating a new extractor template",
            "type": "object",
            "required": [
                "extractors",
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Extracts invoice numbers and amounts"
                },
                "extractors": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/definitions/api.ExtractorConfig"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "Invoice Extractor"
                }
            }
        },
        "api.CreateSubscriptionRequest": {
            "description": "Request body for creating an email subscription",
            "type": "object",
            "required": [
                "account_id"
            ],
            "properties": {
                "account_id": {
                    "description": "Email account ID to subscribe to",
                    "type": "integer",
                    "example": 1
                },
                "filters": {
                    "description": "Optional filters for the subscription",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.SubscriptionFilters"
                        }
                    ]
                },
                "include_body": {
                    "description": "Whether to include email body in notifications (default: false)",
                    "type": "boolean",
                    "example": false
                },
                "mailbox": {
                    "description": "Mailbox to monitor (default: \"INBOX\")",
                    "type": "string",
                    "example": "INBOX"
                },
                "polling_interval": {
                    "description": "Polling interval in seconds (default: 60, min: 30)",
                    "type": "integer",
                    "example": 60
                }
            }
        },
        "api.CustomEmailForTesting": {
            "description": "Custom email content for testing extractors",
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "example": "This is the email body content"
                },
                "cc": {
                    "type": "string",
                    "example": "cc@example.com"
                },
                "from": {
                    "type": "string",
                    "example": "sender@example.com"
                },
                "html_body": {
                    "type": "string",
                    "example": "\u003cp\u003eThis is the HTML body\u003c/p\u003e"
                },
                "subject": {
                    "type": "string",
                    "example": "Test Email Subject"
                },
                "to": {
                    "type": "string",
                    "example": "receiver@example.com"
                }
            }
        },
        "api.EmailDomainsResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "api.ErrorResponse": {
            "description": "Standard error response format",
            "type": "object",
            "properties": {
                "code": {
                    "description": "HTTP status code",
                    "type": "integer",
                    "example": 400
                },
                "details": {
                    "description": "Additional details about the error (optional)",
                    "type": "string",
                    "example": "The email address format is invalid"
                },
                "error": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Invalid request"
                }
            }
        },
        "api.ExtractEmailsRequest": {
            "description": "Request body for extracting content from emails with advanced filtering",
            "type": "object",
            "properties": {
                "batch_size": {
                    "description": "Processing options",
                    "type": "integer",
                    "example": 50
                },
                "body_query": {
                    "type": "string",
                    "example": "important"
                },
                "cc_query": {
                    "type": "string",
                    "example": "manager@example.com"
                },
                "end_date": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "extractor_id": {
                    "description": "Extractor template ID (if provided, will be merged with extractors)",
                    "type": "integer",
                    "example": 1
                },
                "extractors": {
                    "description": "Extraction configurations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExtractorConfig"
                    }
                },
                "from_query": {
                    "description": "Text search filters",
                    "type": "string",
                    "example": "john@example.com"
                },
                "html_query": {
                    "type": "string",
                    "example": "\u003cb\u003eurgent\u003c/b\u003e"
                },
                "keyword": {
                    "type": "string",
                    "example": "project"
                },
                "limit": {
                    "description": "Pagination and sorting",
                    "type": "integer",
                    "example": 100
                },
                "mailbox": {
                    "description": "Mailbox filter",
                    "type": "string",
                    "example": "INBOX"
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "sort_by": {
                    "type": "string",
                    "example": "date DESC"
                },
                "start_date": {
                    "description": "All search parameters from EmailSearchOptions\nTime range filters",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "subject_query": {
                    "type": "string",
                    "example": "meeting"
                },
                "to_query": {
                    "type": "string",
                    "example": "jane@example.com"
                }
            }
        },
        "api.ExtractEmailsResponse": {
            "description": "Response for email content extraction",
            "type": "object",
            "properties": {
                "results": {
                    "description": "Array of extraction results",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExtractorResult"
                    }
                },
                "summary": {
                    "description": "Processing summary",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.ExtractSummary"
                        }
                    ]
                },
                "total_matched": {
                    "description": "Total number of emails that matched extraction criteria",
                    "type": "integer"
                },
                "total_processed": {
                    "description": "Total number of emails processed",
                    "type": "integer"
                }
            }
        },
        "api.ExtractSummary": {
            "description": "Summary of the extraction process",
            "type": "object",
            "properties": {
                "avg_time_per_email_ms": {
                    "description": "Average processing time per email in milliseconds",
                    "type": "number"
                },
                "batches_processed": {
                    "description": "Number of batches processed",
                    "type": "integer"
                },
                "extractor_stats": {
                    "description": "Extraction statistics per extractor",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExtractorStats"
                    }
                },
                "processing_time_ms": {
                    "description": "Time taken for the extraction process",
                    "type": "integer"
                }
            }
        },
        "api.ExtractorConfig": {
            "description": "Configuration for email content extraction",
            "type": "object",
            "required": [
                "extract",
                "field",
                "type"
            ],
            "properties": {
                "extract": {
                    "description": "Extract configuration (returns string or null)",
                    "type": "string",
                    "example": "Invoice #(\\d+)"
                },
                "field": {
                    "description": "Field to extract from: ALL, from, to, cc, subject, body, html_body, headers",
                    "type": "string",
                    "example": "subject"
                },
                "match": {
                    "description": "Optional match configuration (returns {matched: boolean, reason?: string})",
                    "type": "string",
                    "example": "return {matched: content.includes('invoice'), reason: 'No invoice keyword found'}"
                },
                "type": {
                    "description": "Type of extraction: regex, js, gotemplate",
                    "type": "string",
                    "example": "regex"
                }
            }
        },
        "api.ExtractorResult": {
            "description": "Result of email content extraction",
            "type": "object",
            "properties": {
                "email": {
                    "description": "The email that matched the extraction criteria",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Email"
                        }
                    ]
                },
                "matches": {
                    "description": "Array of extracted content matches",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "api.ExtractorStats": {
            "description": "Statistics for individual extractors",
            "type": "object",
            "properties": {
                "avg_matches_per_email": {
                    "description": "Average matches per email for this extractor",
                    "type": "number"
                },
                "config": {
                    "description": "Extractor configuration",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.ExtractorConfig"
                        }
                    ]
                },
                "match_count": {
                    "description": "Number of emails that matched this extractor",
                    "type": "integer"
                },
                "total_matches": {
                    "description": "Total number of matches found by this extractor",
                    "type": "integer"
                }
            }
        },
        "api.ExtractorTemplateResponse": {
            "description": "Extractor template information",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "description": {
                    "type": "string",
                    "example": "Extracts invoice numbers and amounts"
                },
                "extractors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExtractorConfig"
                    }
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Invoice Extractor"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                }
            }
        },
        "api.FetchAndStoreRequest": {
            "description": "Request body for fetching and storing emails with sync options",
            "type": "object",
            "properties": {
                "default_start_date": {
                    "description": "Start date for sync range when no previous sync record exists (RFC3339 format, default: 1 month ago)",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "end_date": {
                    "description": "End date for sync range (RFC3339 format, default: now)",
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "include_body": {
                    "description": "Whether to include email body content (default: true)",
                    "type": "boolean",
                    "example": true
                },
                "mailboxes": {
                    "description": "Mailbox names to sync (default: [\"INBOX\"])",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"INBOX\"",
                        " \"Sent\"]"
                    ]
                },
                "max_emails_per_mailbox": {
                    "description": "Maximum number of emails to process per mailbox (default: 1000)",
                    "type": "integer",
                    "example": 1000
                },
                "sync_mode": {
                    "description": "Sync mode: \"full\" for full sync, \"incremental\" for incremental sync (default: \"incremental\")",
                    "type": "string",
                    "example": "incremental"
                }
            }
        },
        "api.FetchAndStoreResponse": {
            "description": "Response for fetch and store operation",
            "type": "object",
            "properties": {
                "mailbox_results": {
                    "description": "Results per mailbox",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.MailboxSyncResult"
                    }
                },
                "messages": {
                    "description": "Any warnings or messages",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "processing_time_ms": {
                    "description": "Processing time in milliseconds",
                    "type": "integer"
                },
                "status": {
                    "description": "Operation status",
                    "type": "string",
                    "example": "success"
                },
                "sync_mode": {
                    "description": "Sync mode used",
                    "type": "string",
                    "example": "incremental"
                },
                "total_emails_processed": {
                    "description": "Total emails processed across all mailboxes",
                    "type": "integer"
                },
                "total_new_emails": {
                    "description": "Total new emails stored",
                    "type": "integer"
                }
            }
        },
        "api.FetchEmailsRequest": {
            "description": "Request body for fetching emails with enhanced filtering capabilities and smart email matching. Supports Gmail aliases (dots, plus signs, googlemail.com) and domain mail forwarding.",
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "ID of the account",
                    "type": "integer",
                    "example": 1
                },
                "body_filter": {
                    "description": "Filter by email body content",
                    "type": "string",
                    "example": "project update"
                },
                "categories": {
                    "description": "Outlook-specific filters",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"Work\"",
                        " \"Important\"]"
                    ]
                },
                "cc_filter": {
                    "description": "Filter by CC recipient email address or name",
                    "type": "string",
                    "example": "manager@example.com"
                },
                "email_address": {
                    "description": "Email address of the account. Supports Gmail aliases (john.doe+work@gmail.com will match johndoe@gmail.com) and domain mail (any@company.com will match domain mail account for company.com)",
                    "type": "string",
                    "example": "john.doe+work@gmail.com"
                },
                "end_date": {
                    "description": "End date for date range filtering (RFC3339 format)",
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "fetch_from_server": {
                    "description": "Whether to fetch from IMAP server or local database (default: false - from database)",
                    "type": "boolean",
                    "example": false
                },
                "fields_to_include": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "[\"id\"",
                        " \"subject\"",
                        " \"from\"",
                        " \"date\"]"
                    ]
                },
                "from_filter": {
                    "description": "Enhanced filtering parameters (inspired by Outlook Graph API and IMAP)\nFilter by sender email address or name",
                    "type": "string",
                    "example": "john@example.com"
                },
                "has_attachments": {
                    "description": "Message flags filtering (IMAP flags)",
                    "type": "boolean",
                    "example": true
                },
                "include_attachments": {
                    "description": "Response format options",
                    "type": "boolean",
                    "example": false
                },
                "include_body": {
                    "description": "Include email body content (default: false for performance)",
                    "type": "boolean",
                    "example": false
                },
                "include_headers": {
                    "type": "boolean",
                    "example": false
                },
                "is_draft": {
                    "type": "boolean",
                    "example": false
                },
                "is_flagged": {
                    "type": "boolean",
                    "example": true
                },
                "is_important": {
                    "type": "boolean",
                    "example": true
                },
                "is_read": {
                    "type": "boolean",
                    "example": false
                },
                "keyword": {
                    "description": "Global keyword search across all text fields",
                    "type": "string",
                    "example": "urgent"
                },
                "limit": {
                    "description": "Maximum number of emails to fetch (default: 10, max: 100)",
                    "type": "integer",
                    "example": 10
                },
                "mailbox": {
                    "description": "Mailbox name to fetch emails from (default: \"INBOX\")",
                    "type": "string",
                    "example": "INBOX"
                },
                "max_results": {
                    "description": "Alternative to limit",
                    "type": "integer",
                    "example": 50
                },
                "max_size": {
                    "type": "integer",
                    "example": 10485760
                },
                "message_id": {
                    "description": "Advanced IMAP search criteria",
                    "type": "string",
                    "example": "\u003cmessage-id@example.com\u003e"
                },
                "min_size": {
                    "description": "Size filtering",
                    "type": "integer",
                    "example": 1024
                },
                "offset": {
                    "description": "Number of emails to skip (for pagination)",
                    "type": "integer",
                    "example": 0
                },
                "page_token": {
                    "description": "Pagination and performance",
                    "type": "string",
                    "example": "eyJvZmZzZXQiOjEwfQ=="
                },
                "received_after": {
                    "description": "Date-based filters (more granular than start/end date)",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "received_before": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "search_query": {
                    "description": "Search query for subject or sender (legacy parameter)",
                    "type": "string",
                    "example": "important"
                },
                "sensitivity": {
                    "description": "normal, personal, private, confidential",
                    "type": "string",
                    "example": "normal"
                },
                "sent_after": {
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "sent_before": {
                    "type": "string",
                    "example": "2024-12-31T23:59:59Z"
                },
                "sort_by": {
                    "description": "Sort order: \"date_desc\", \"date_asc\", \"subject_asc\", \"subject_desc\" (default: \"date_desc\")",
                    "type": "string",
                    "example": "date_desc"
                },
                "start_date": {
                    "description": "Start date for date range filtering (RFC3339 format)",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "subject_filter": {
                    "description": "Filter by subject content",
                    "type": "string",
                    "example": "meeting"
                },
                "sync_state": {
                    "description": "For incremental sync",
                    "type": "string",
                    "example": "sync-token-123"
                },
                "thread_id": {
                    "type": "string",
                    "example": "thread-123"
                },
                "to_filter": {
                    "description": "Filter by recipient email address or name",
                    "type": "string",
                    "example": "jane@example.com"
                },
                "use_uid": {
                    "description": "IMAP-specific options",
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "api.FetchNowRequest": {
            "description": "Request to immediately fetch emails for a subscription",
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID (optional, alternative to subscription_id)",
                    "type": "integer",
                    "example": 1
                },
                "force_refresh": {
                    "description": "Force refresh even if recently checked",
                    "type": "boolean",
                    "example": true
                },
                "subscription_id": {
                    "description": "Subscription ID (optional, will fetch for all if not provided)",
                    "type": "string",
                    "example": "sub_123456"
                }
            }
        },
        "api.FetchNowResponse": {
            "description": "Response for immediate email fetch",
            "type": "object",
            "properties": {
                "errors": {
                    "description": "Any error messages",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "new_emails": {
                    "description": "Number of new emails fetched",
                    "type": "integer",
                    "example": 5
                },
                "processing_time_ms": {
                    "description": "Processing time in milliseconds",
                    "type": "integer",
                    "example": 1250
                },
                "status": {
                    "description": "Status of the operation",
                    "type": "string",
                    "example": "success"
                },
                "total_processed": {
                    "description": "Total emails processed",
                    "type": "integer",
                    "example": 50
                }
            }
        },
        "api.GenerateEmailTemplateRequest": {
            "type": "object",
            "required": [
                "template_name",
                "user_input"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "scenario": {
                    "type": "string"
                },
                "template_name": {
                    "type": "string"
                },
                "user_input": {
                    "type": "string"
                }
            }
        },
        "api.GenerateEmailTemplateResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "extractor_config": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ExtractorTemplateConfig"
                    }
                },
                "generated_content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tokens_used": {
                    "type": "integer"
                },
                "user_input": {
                    "type": "string"
                }
            }
        },
        "api.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.LoginResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "api.MailboxSyncResult": {
            "description": "Sync result for a single mailbox",
            "type": "object",
            "properties": {
                "emails_processed": {
                    "description": "Number of emails processed",
                    "type": "integer",
                    "example": 150
                },
                "error": {
                    "description": "Any errors encountered",
                    "type": "string"
                },
                "mailbox_name": {
                    "description": "Mailbox name",
                    "type": "string",
                    "example": "INBOX"
                },
                "new_emails": {
                    "description": "Number of new emails stored",
                    "type": "integer",
                    "example": 25
                },
                "previous_sync_end_time": {
                    "description": "Previous sync end time (for incremental sync)",
                    "type": "string"
                },
                "sync_end_time": {
                    "description": "Sync end time",
                    "type": "string"
                },
                "sync_start_time": {
                    "description": "Sync start time",
                    "type": "string"
                }
            }
        },
        "api.OpenAIConfigRequest": {
            "type": "object",
            "required": [
                "api_key",
                "base_url",
                "channel_type",
                "model",
                "name"
            ],
            "properties": {
                "api_key": {
                    "type": "string"
                },
                "base_url": {
                    "type": "string"
                },
                "channel_type": {
                    "type": "string",
                    "enum": [
                        "openai",
                        "gemini",
                        "claude"
                    ]
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "is_active": {
                    "type": "boolean"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.OpenAIConfigResponse": {
            "type": "object",
            "properties": {
                "api_key": {
                    "description": "Will be masked in response",
                    "type": "string"
                },
                "base_url": {
                    "type": "string"
                },
                "channel_type": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "api.PaginatedAccountsResponse": {
            "description": "Paginated response for email accounts",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EmailAccount"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "api.PaginatedExtractorTemplatesResponse": {
            "description": "Paginated response for extractor templates",
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExtractorTemplateResponse"
                    }
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "api.RandomEmailResponse": {
            "description": "Response containing a random email address",
            "type": "object",
            "properties": {
                "email": {
                    "description": "The generated email address (for alias/domain cases)",
                    "type": "string",
                    "example": "john.doe+random123@gmail.com"
                },
                "email_type": {
                    "description": "Type of email returned: \"regular\", \"alias\", \"domain\"",
                    "type": "string",
                    "example": "alias"
                },
                "message": {
                    "description": "Message explaining the selection",
                    "type": "string",
                    "example": "Generated random Gmail alias"
                },
                "raw_email": {
                    "description": "The generated or selected email address",
                    "type": "string",
                    "example": "john.doe+random123@gmail.com"
                },
                "status": {
                    "description": "Status of the operation",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "api.SubscriptionFilters": {
            "description": "Optional filters for email subscription",
            "type": "object",
            "properties": {
                "from_filter": {
                    "description": "Filter by sender",
                    "type": "string",
                    "example": "important@example.com"
                },
                "keyword_filter": {
                    "description": "Filter by keywords in body",
                    "type": "string",
                    "example": "invoice"
                },
                "subject_filter": {
                    "description": "Filter by subject",
                    "type": "string",
                    "example": "urgent"
                }
            }
        },
        "api.SubscriptionListResponse": {
            "description": "List of email subscriptions",
            "type": "object",
            "properties": {
                "subscriptions": {
                    "description": "List of subscriptions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.SubscriptionResponse"
                    }
                },
                "total": {
                    "description": "Total count",
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "api.SubscriptionResponse": {
            "description": "Email subscription information",
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Email account ID",
                    "type": "integer",
                    "example": 1
                },
                "created_at": {
                    "description": "Creation time",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "email_address": {
                    "description": "Email address",
                    "type": "string",
                    "example": "user@example.com"
                },
                "filters": {
                    "description": "Subscription filters",
                    "allOf": [
                        {
                            "$ref": "#/definitions/api.SubscriptionFilters"
                        }
                    ]
                },
                "id": {
                    "description": "Subscription ID",
                    "type": "string",
                    "example": "sub_123456"
                },
                "include_body": {
                    "description": "Whether email body is included",
                    "type": "boolean",
                    "example": false
                },
                "last_checked_at": {
                    "description": "Last check time",
                    "type": "string",
                    "example": "2024-01-01T00:05:00Z"
                },
                "mailbox": {
                    "description": "Monitored mailbox",
                    "type": "string",
                    "example": "INBOX"
                },
                "next_check_at": {
                    "description": "Next scheduled check",
                    "type": "string",
                    "example": "2024-01-01T00:06:00Z"
                },
                "polling_interval": {
                    "description": "Polling interval in seconds",
                    "type": "integer",
                    "example": 60
                },
                "status": {
                    "description": "Subscription status",
                    "type": "string",
                    "example": "active"
                }
            }
        },
        "api.TestExtractorResult": {
            "description": "Result of testing a single extractor",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "extraction failed: invalid regex"
                },
                "field": {
                    "type": "string",
                    "example": "subject"
                },
                "result": {
                    "type": "string",
                    "example": "extracted value"
                },
                "type": {
                    "type": "string",
                    "example": "regex"
                }
            }
        },
        "api.TestExtractorTemplateRequest": {
            "description": "Request body for testing an extractor template",
            "type": "object",
            "properties": {
                "custom_email": {
                    "$ref": "#/definitions/api.CustomEmailForTesting"
                },
                "email_id": {
                    "description": "Either EmailID or CustomEmail must be provided",
                    "type": "integer",
                    "example": 123
                },
                "extractors": {
                    "description": "Optional: specific extractors to test (if not provided, uses template extractors)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExtractorConfig"
                    }
                }
            }
        },
        "api.TestOpenAIConfigResponse": {
            "type": "object",
            "properties": {
                "channel_type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "response": {
                    "type": "string"
                },
                "response_time_ms": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                },
                "tokens_used": {
                    "type": "integer"
                }
            }
        },
        "api.UpdateAccountRequest": {
            "description": "Request body for updating an email account (partial update supported)",
            "type": "object",
            "properties": {
                "authType": {
                    "$ref": "#/definitions/models.AuthType"
                },
                "customSettings": {
                    "$ref": "#/definitions/models.JSONMap"
                },
                "domain": {
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "isDomainMail": {
                    "type": "boolean"
                },
                "lastSyncAt": {
                    "type": "string"
                },
                "mailProviderId": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "api.UpdateExtractorTemplateRequest": {
            "description": "Request body for updating an existing extractor template",
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Updated description"
                },
                "extractors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExtractorConfig"
                    }
                },
                "name": {
                    "type": "string",
                    "example": "Updated Invoice Extractor"
                }
            }
        },
        "api.VerifyAccountRequest": {
            "type": "object",
            "properties": {
                "account_id": {
                    "type": "integer"
                },
                "auth_type": {
                    "type": "string"
                },
                "custom_settings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "email_address": {
                    "type": "string"
                },
                "mail_provider_id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "proxy": {
                    "type": "string"
                }
            }
        },
        "api.VerifyAccountResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "api.WaitEmailRequest": {
            "description": "Request parameters for waiting for emails to arrive",
            "type": "object",
            "properties": {
                "account_id": {
                    "description": "Account ID (mutually exclusive with Email)",
                    "type": "integer",
                    "example": 1
                },
                "email": {
                    "description": "Email address (mutually exclusive with AccountID)",
                    "type": "string",
                    "example": "user@example.com"
                },
                "extract": {
                    "description": "Extraction configurations (same as extract-emails endpoint)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.ExtractorConfig"
                    }
                },
                "interval": {
                    "description": "Interval for checking emails in seconds (default: 5)",
                    "type": "integer",
                    "example": 5
                },
                "start_time": {
                    "description": "Start time for filtering emails (default: current time)",
                    "type": "string",
                    "example": "2024-01-01T00:00:00Z"
                },
                "timeout": {
                    "description": "Timeout in seconds (default: 30)",
                    "type": "integer",
                    "example": 30
                }
            }
        },
        "api.WaitEmailResponse": {
            "description": "Response for waiting for emails",
            "type": "object",
            "properties": {
                "checks_performed": {
                    "description": "Number of checks performed",
                    "type": "integer",
                    "example": 3
                },
                "elapsed_time": {
                    "description": "Time taken to find the email in seconds",
                    "type": "number",
                    "example": 12.5
                },
                "email": {
                    "description": "The found email (if any)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Email"
                        }
                    ]
                },
                "found": {
                    "description": "Whether an email was found",
                    "type": "boolean",
                    "example": true
                },
                "matches": {
                    "description": "Extracted content (if extractors were provided)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "message": {
                    "description": "Message explaining the result",
                    "type": "string",
                    "example": "Email found matching criteria"
                },
                "status": {
                    "description": "Status of the operation",
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "models.ActivityLogResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "metadata": {},
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.ActivityType"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string"
                        },
                        "id": {
                            "type": "integer"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "models.ActivityType": {
            "type": "string",
            "enum": [
                "email_received",
                "email_sent",
                "email_deleted",
                "email_moved",
                "account_added",
                "account_updated",
                "account_deleted",
                "account_verified",
                "account_synced",
                "sync_started",
                "sync_completed",
                "sync_failed",
                "subscribed",
                "unsubscribed",
                "ai_extraction",
                "ai_template_created",
                "user_login",
                "user_logout"
            ],
            "x-enum-varnames": [
                "ActivityEmailReceived",
                "ActivityEmailSent",
                "ActivityEmailDeleted",
                "ActivityEmailMoved",
                "ActivityAccountAdded",
                "ActivityAccountUpdated",
                "ActivityAccountDeleted",
                "ActivityAccountVerified",
                "ActivityAccountSynced",
                "ActivitySyncStarted",
                "ActivitySyncCompleted",
                "ActivitySyncFailed",
                "ActivitySubscribed",
                "ActivityUnsubscribed",
                "ActivityAIExtraction",
                "ActivityAITemplateCreated",
                "ActivityUserLogin",
                "ActivityUserLogout"
            ]
        },
        "models.Attachment": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "$ref": "#/definitions/models.Email"
                },
                "emailID": {
                    "type": "integer"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mimetype": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.AuthType": {
            "type": "string",
            "enum": [
                "password",
                "token",
                "oauth2"
            ],
            "x-enum-varnames": [
                "AuthTypePassword",
                "AuthTypeToken",
                "AuthTypeOAuth2"
            ]
        },
        "models.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "type": "boolean"
                }
            }
        },
        "models.Email": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.EmailAccount"
                },
                "accountID": {
                    "type": "integer"
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attachment"
                    }
                },
                "bcc": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "body": {
                    "type": "string"
                },
                "cc": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/models.DeletedAt"
                },
                "flags": {
                    "description": "IMAP flags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "from": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "htmlbody": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mailboxName": {
                    "description": "IMAP mailbox name",
                    "type": "string"
                },
                "messageID": {
                    "description": "RFC Message-ID",
                    "type": "string"
                },
                "rawMessage": {
                    "description": "存储原始邮件报文",
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                },
                "to": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.EmailAccount": {
            "type": "object",
            "properties": {
                "authType": {
                    "$ref": "#/definitions/models.AuthType"
                },
                "createdAt": {
                    "type": "string"
                },
                "customSettings": {
                    "$ref": "#/definitions/models.JSONMap"
                },
                "deletedAt": {
                    "$ref": "#/definitions/models.DeletedAt"
                },
                "domain": {
                    "description": "For domain-specific email",
                    "type": "string"
                },
                "emailAddress": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isDomainMail": {
                    "type": "boolean"
                },
                "isVerified": {
                    "type": "boolean"
                },
                "lastSyncAt": {
                    "type": "string"
                },
                "mailProvider": {
                    "$ref": "#/definitions/models.MailProvider"
                },
                "mailProviderId": {
                    "type": "integer"
                },
                "password": {
                    "description": "For AuthTypePassword",
                    "type": "string"
                },
                "proxy": {
                    "description": "e.g., \"socks5://user:pass@host:port\"",
                    "type": "string"
                },
                "token": {
                    "description": "For AuthTypeToken",
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "verifiedAt": {
                    "type": "string"
                }
            }
        },
        "models.ExtractorTemplateConfig": {
            "type": "object",
            "properties": {
                "extract": {
                    "description": "Extract configuration (returns string or null)",
                    "type": "string"
                },
                "field": {
                    "description": "Field to extract from: ALL, from, to, cc, subject, body, html_body, headers",
                    "type": "string"
                },
                "match": {
                    "description": "Optional match configuration (returns {matched: boolean, reason?: string})",
                    "type": "string"
                },
                "type": {
                    "description": "Type of extraction: regex, js, gotemplate",
                    "type": "string"
                }
            }
        },
        "models.IncrementalSyncRecord": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/models.EmailAccount"
                },
                "account_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "emails_processed": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "last_sync_end_time": {
                    "type": "string"
                },
                "last_sync_start_time": {
                    "type": "string"
                },
                "mailbox_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.JSONMap": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "models.MailProvider": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/models.DeletedAt"
                },
                "id": {
                    "type": "integer"
                },
                "imapPort": {
                    "type": "integer"
                },
                "imapServer": {
                    "type": "string"
                },
                "name": {
                    "description": "e.g., \"Gmail\", \"Outlook\"",
                    "type": "string"
                },
                "smtpPort": {
                    "type": "integer"
                },
                "smtpServer": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/models.MailProviderType"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.MailProviderType": {
            "type": "string",
            "enum": [
                "gmail",
                "outlook",
                "custom"
            ],
            "x-enum-varnames": [
                "ProviderTypeGmail",
                "ProviderTypeOutlook",
                "ProviderTypeCustom"
            ]
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "$ref": "#/definitions/models.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_login_at": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Mailman API",
	Description:      "This is a sample server for a mailman service.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
