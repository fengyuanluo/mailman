# 工作流名称
name: Build and Push ARM64 Docker Image

# 触发条件：
# 1. 当一个 'v' 开头的标签被推送时
# 2. 或者可以手动触发 (workflow_dispatch)
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

# 环境变量
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job: 构建 ARM64 架构的 all-in-one 镜像
  build-arm64-image:
    name: Build All-in-One ARM64 Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 设置 QEMU，用于模拟 ARM64 环境进行构建
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # 3. 登录到 GitHub Container Registry (ghcr.io)
      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 4. 提取镜像元数据 (标签和 Label)
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-all
          tags: |
            type=ref,event=tag
            type=raw,value=latest,enable={{is_default_branch}}

      # 5. 设置 Docker Buildx，这是 Docker 的高级构建工具
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 6. 构建并推送镜像
      - name: Build and push all-in-one image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.all
          push: true
          # 关键修改：明确指定只为 linux/arm64 平台构建
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Job: 创建 GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    # 依赖于 arm64 镜像构建成功
    needs: [build-arm64-image]
    # 只有在推送标签时才执行此 Job
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write # 需要权限来创建 Release
    steps:
      # 1. 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. 使用 softprops/action-gh-release 创建 Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## Docker Image (linux/arm64)

            ### All-in-One
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-all:${{ github.ref_name }}
